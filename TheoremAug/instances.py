list_algorithm = [
    "Two Pointers",
    "N-Queens Problem",
    "Sweep Line Algorithm",
    "Kahn's Algorithm",
    "Dijkstra's Algorithm",
    "Game Theory",
    "Depth First Search (DFS)",
    "Prefix Sum",
    "Greedy Algorithm",
    "Bucket Sort",
    "Breadth First Search (BFS)",
    "Longest Common Subsequence (LCS)",
    "Huffman Coding",
    "Manhattan Distance",
    "Topological Sorting",
    "Rod Cutting Problem",
    "Binary Search",
    "Knapsack Algorithm (0/1 Knapsack)",
    "Floyd-Warshall Algorithm",
    "Bellman-Ford Algorithm",
    "Merge Sort",
    "Quick Sort",
    "Heap Sort",
    "Bubble Sort",
    "Insertion Sort",
    "Selection Sort",
    "Kruskal's Algorithm",
    "Prim's Algorithm",
    "Kadane's Algorithm",
    "Rabin-Karp Algorithm",
    "Knuth-Morris-Pratt (KMP) Algorithm",
    "Boyer-Moore Algorithm",
    "Longest Increasing Subsequence (LIS)",
    "Edit Distance",
    "Sieve of Eratosthenes",
    "Tarjan's Algorithm",
    "Kosaraju's Algorithm",
    "Z Algorithm",
    "LRU Cache Algorithm",
    "A-star search algorithm",
    "Hamiltonian Path",
    "Substring Search Algorithm",
    "Permutations",
    "Combinations",
    "Knapsack DP with Bitmasking",
    "Matrix Exponentiation",
    "Square Root Decomposition",
    "Mo's Algorithm",
    "Strassen's Algorithm",
    "K-Means Clustering",
    "Gradient Descent",
    "Support Vector Machines (SVM)",
    "Aho-Corasick Algorithm",
    "Ford-Fulkerson Algorithm",
    "Trapping Rain Water",
    "Matrix Chain Multiplication",
    "Coin Change Problem",
    "Palindrome Partitioning",
    "Sudoku Solver",
    "Newton's Method",
]

list_data_structure = [
    "Stack (Last In, First Out)",
    "Monotonic Stack",
    "Priority Queue",
    "Binary Tree",
    "Trie",
    "Circular Array",
    "Hash Map",
    "Linked List",
    "Adjacency List",
    "Disjoint Set",
    "Suffix Array",
    "Suffix Tree",
    "Skip List",
    "Red-Black Tree",
    "B-Tree",
    "Fenwick Tree (Binary Indexed Tree)",
    "Interval Tree",
    "Segment Tree",
    "k-D Tree",
    "Quad Tree",
    "Octree",
    "Cuckoo Hashing",
    "Fibonacci Heap",
    "Binomial Heap",
    "Pairing Heap",
    "Treap",
    "Deque (Double-Ended Queue)",
    "Bloom Filter",
    "Radix Tree",
    "Directed Acyclic Graph"
]

list_math_theorem = [
    "Newton's Sums",
    "Pigeonhole Principle",
    "Chicken McNugget Theorem",
    "Simon's Favorite Factoring Trick",
    "Fermat's Little Theorem",
    "Ptolemys theorem",
    "Euler's Identity",
    "Euclidean algorithm",
    "Cauchy-Riemann Equations (Complex Analysis)",
    "Vieta's Formulas",
    "Triangle Inequality",
    "Power of a Point",
    "Central Limit Theorem",
    "Pick's Theorem",
    "Shoelace Theorem",
    "Legendre's formula",
    "Principle of Inclusion Exclusion",
    "Ceva's Theorem",
    "Logarithm: Change of Base Formula",
    "Stars and Bars formula",
    "Eigenvalue equation",
    "Intermediate Value Theorem",
    "Mass point geometry theorem",
    "Geometric probability in 2D",
    "Fourier Transform",
    "Cramer's Rule",
    "Vertex cover in graph theory",
    "One-sample t-test",
    "Z-transform",
    "Ramsey's Theorem",
    "Pollard's Rho Algorithm (Factorization)",
    "Chinese Remainder Theorem",
    "Taylor's Theorem",
    "Addition of Multiindices",
    "Bayes' Theorem",
    "Binomial Theorem",
    "Mean Value Theorem for Derivatives",
    "Pythagorean Theorem",
    "Lagrange's Theorem (Group Theory)",
    "The Chain Rule in calculus",
    "Green's Theorem",
    "Cauchy-Schwarz Inequality",
    "Divergence Theorem",
    "Second Part of the Fundamental Theorem of Calculus (FTC2)",
    "Quadratic Formula (for polynomials of degree 2)",
    "Fundamental Theorem of Arithmetic",
    "Rolle's Theorem",
    "De Moivre's Theorem",
    "Law of Large Numbers",
    "Cayley-Hamilton Theorem",
    "L'Hôpital's Rule",
    "Singular Value Decomposition (SVD) Theorem",
    "The Squeeze Theorem",
    "Brouwer Fixed-Point Theorem",
    "Tychonoff's Theorem",
    "Bézout's Theorem",
    "Vandermonde's Identity",
    "Wilson's Theorem",
    "Markov Property",
    "Invertible Matrix Theorem",
    "Sylow Theorems",
    "Cantor's Theorem",
    "Heron's Formula (for the area of a triangle)",
    "Laplace Transform",
    "Bolzano-Weierstrass Theorem",
    "Weierstrass Approximation Theorem",
    "Cauchy's Mean Value Theorem",
    "Lindelof's Theorem",
    "Poisson Limit Theorem",
    "Mertens' Theorem",
    "Chebyshev's Inequality",
    "Markov's Inequality",
    "Jensen's Inequality",
    "Borel-Cantelli Lemma",
    "Chauvenet's Criterion",
    "Helly's Theorem",
    "Holder's Inequality",
    "Minkowski's Inequality",
    "Euler's Formula for Planar Graphs",
    "Hahn Decomposition Theorem",
    "Radon-Nikodym Theorem",
    "Kakutani Fixed-Point Theorem",
    "Sum of a Geometric Series Formula",
    "The Isoperimetric Inequality",
    "Spectral Theorem",
    "Power Rule (for derivatives)",
    "Hadamard's Determinant Theorem",
    "Borel's Theorem",
    "Runge's Theorem",
    "Euler's Formula for Polyhedra",
    "Integral of a Power Function Formula",
    "Poincaré Recurrence Theorem",
    "Extreme Value Theorem",
    "Dirichlet's Theorem on Primes in Arithmetic Progressions",
    "Lefschetz Fixed-Point Theorem",
    "Seifert-van Kampen Theorem",
    "Hurewicz Theorem",
    "Frobenius' Theorem",
    "Formula for Permutations (without repetition)",
    "Formula for Combinations (with repetition)"
]


list_physics_theorem = [
    "Center-of-Mass Energy",
    "Planck's energy-frequency relation",
    "Magnification theorem",
    "Maximum Entropy Principle",
    "Heron's Formula",
    "Gibbs Free Energy",
    "Ideal Gas Law",
    "Torricelli's Law",
    "Coulomb's Law",
    "Gauss's Law for Electricity",
    "Kirchhoff's Laws",
    "Ohm's Law",
    "Millma's Theorem",
    "Carnot's Theorem",
    "Beer-Lambert Law",
    "Newton's Laws of Motion",
    "Lorentz Force",
    "First Law of Thermodynamics",
    "Work-Energy Theorem",
    "Maxwell's Equations",
    "Conservation of Mechanical Energy",
    "Kinetic Energy Theorem for Rotational Motion",
    "Conservation of Angular Momentum",
    "Torque-Angular Momentum Theorem",
    "Centripetal Force Formula (for an object in circular motion)",
    "Euler's Rotation Theorems",
    "Parallel Axis Theorem",
    "Elastic Collision",
    "Boucherot's Theorem (Power Factor Theorem)",
    "Tellegen's Theorem",
    "Law of Reflection",
    "Malus's Law",
    "Specific Heat Capacity Formula",
    "Optical Path Length (OPL) Theorem",
    "Snell's Law",
    "Huygens' Principle",
    "Young's Double-Slit Experiment",
    "Fraunhofer Diffraction Theory",
    "Fresnel Equations",
    "Planck's Law of Blackbody Radiation",
    "Stefan-Boltzmann Law",
    "Wien's Displacement Law",
    "Rayleigh-Jeans Law",
    "Compton Scattering Formula",
    "Electric Field Formula (from a point charge)",
    "Speed of Sound in air (at temperature T)",
    "Heat Transfer via Conduction (Fourier's Law)",
    "Pauli Exclusion Principle",
    "Energy Stored in a Capacitor Formula",
    "Einstein's Photoelectric Equation",
    "Bragg's Law",
    "Gauss's Law for Magnetism",
    "Faraday's Law of Induction",
    "Lenz's Law",
    "Work Done in an Adiabatic Process (Thermodynamics) Formula",
    "Ampère's Circuital Law",
    "Hooke's Law (for Springs)",
    "Laplace's Equation",
    "Poisson's Equation",
    "D'Alembert's Principle",
    "Lagrange's Equations of Motion",
    "Hamilton's Principle",
    "Virial Theorem",
    "Kepler's Laws of Planetary Motion",
    "Newton's Law of Universal Gravitation",
    "Magnetic Force on a Moving Charge Formula",
    "Schwarzschild Metric",
    "Lorentz Transformation",
    "Einstein's Energy-Mass Equivalence",
    "Shannon Entropy",
    "Dirac Equation",
    "Feynman Path Integral Formulation",
    "Landauer's Principle",
    "Onsager Reciprocity Relations",
    "Bernoulli's Equation (for fluid flow)",
    "Stokes' Law",
    "Reynolds Transport Theorem",
    "Conservation of Mass",
    "Thermal Conductivity Formula",
    "Lens Equation (for a thin lens)",
]

list_finance_formula = [
    "Binomial Model in finance",
    "Net Present Value (NPV)",
    "Future Value (FV) Formula",
    "Present Value (PV) Formula",
    "Discounted Cash Flow (DCF) Model",
    "Dividend Discount Model",
    "Capital Asset Pricing Model (CAPM)",
    "Gordon Growth Model (GGM)",
    "Binomial Option Pricing Model",
    "Bond Pricing Formula",
    "Yield to Maturity (YTM)",
    "Sharpe Ratio",
    "Macauley Duration",
    "Modified Duration",
    "Internal Rate of Return (IRR)",
    "Return on Equity (ROE)",
    "Value at Risk (VaR) Formula",
    "Z-Spread Formula",
    "Inventory Turnover Ratio",
    "GDP (Expenditure Approach)",
    "DuPont Analysis Formula",
    "Weighted Average Cost of Capital (WACC)",
    "Derivatives Forward Price",
    "Dividend Discount Model (DDM)",
    "Earnings Yield Formula",
    "Sustainable Growth Rate (SGR)",
    "Operating Leverage Formula",
    "Covariance Formula",
    "Variance of a Two-Asset Portfolio",
    "Profitability Index (PI)",
    # "Jensen's Alpha",
    # "Payback Period Formula",
    # "Holt-Winters Exponential Smoothing",
    # "Monte Carlo Simulation for Finance",
    # "Duration Formula for Bonds",
    # "Convexity Formula for Bonds",
    # "Interest Rate Parity (IRP) Formula",
    # "Purchasing Power Parity (PPP) Formula",
    # "Uncovered Interest Rate Parity",
    # "Covered Interest Rate Parity",
    # "Fisher Equation",
    # "Dividend Yield Formula",
    # "Return on Assets (ROA)",
    # "Return on Investment (ROI)",
    # "Return on Capital Employed (ROCE)",
    # "Economic Value Added (EVA)",
    # "Market Value Added (MVA)",
    # "Altman Z-Score",
    # "Break-Even Analysis Formula",
    # "Contribution Margin Formula",
    # "Financial Leverage Formula",
    # "Total Leverage Formula",
    # "Debt-to-Equity Ratio",
    # "Debt Service Coverage Ratio (DSCR)",
    # "Current Ratio",
    # "Quick Ratio (Acid-Test Ratio)",
    # "Working Capital Formula",
    # "Cash Conversion Cycle (CCC)",
    # "Accounts Receivable Turnover",
    # "Accounts Payable Turnover",
    # "Days Sales Outstanding (DSO)",
    # "Days Payable Outstanding (DPO)",
    # "Free Cash Flow (FCF)",
    # "Operating Cash Flow Formula",
    # "Net Cash Flow Formula",
    # "Weighted Average Cost of Capital (WACC) with Tax Shield",
    # "Cost of Debt Formula",
    # "Cost of Equity Formula (Dividend Growth Model)",
    # "Beta Coefficient Formula",
    # "Hedge Ratio Formula",
    # "Forward Price Formula",
    # "Futures Pricing Formula",
    # "Swap Pricing Formula",
    # "Historical Volatility Formula",
    # "Greeks in Options Pricing",
    # "Delta Formula",
    # "Gamma Formula",
    # "Theta Formula",
    # "Vega Formula",
    # "Rho Formula",
    # "Risk-Adjusted Return on Capital (RAROC)",
    # "Economic Capital Formula",
    # "Conditional Value at Risk (CVaR)",
    # "Expected Shortfall (ES)",
    # "Basel III Capital Adequacy Formula",
    # "Stress Testing in Finance",
    # "Credit Scoring Model Formula",
    # "Merton Model for Credit Risk",
    # "Loss Given Default (LGD)",
    # "Probability of Default (PD)",
    # "Exposure at Default (EAD)",
    # "OAS (Option-Adjusted Spread) Formula",
    # "Liquidity Coverage Ratio (LCR)",
    # "Net Stable Funding Ratio (NSFR)",
    # "Key Rate Duration",
    # "Nelson-Siegel Model",
    # "Hull-White Model for Interest Rates",
    # "Heston Model for Stochastic Volatility",
    # "Fama-French Three-Factor Model",
    # "Sortino Ratio",
    # "Omega Ratio",
]

domains = {
    'algorithm': list_algorithm,
    'data structure': list_data_structure,
    'math theorem': list_math_theorem,
    'physics theorem': list_physics_theorem,
    'finance formula': list_finance_formula,
}

example_datasets = {
    'algorithm': [
        'LeetCode', 
        'Advanced Placement (AP) Computer Science Exams',
        'ACM ICPC (International Collegiate Programming Contest)',
        'Google Code Jam',
        'Codeforces Contests',
        'HackerRank',
        'Google Kick Start'
        ],
    'data structure': [
        'LeetCode', 
        'Advanced Placement (AP) Computer Science Exams',
        'ACM ICPC (International Collegiate Programming Contest)',
        'Google Code Jam',
        'Codeforces Contests',
        'HackerRank',
        'Google Kick Start'
        ],
    'math theorem': [
        'American Mathematics Competitions', 
        'American Invitational Mathematics Examination', 
        'International Mathematical Olympiad',
        "China's GaoKao Math Problems",
        "Scholastic Assessment Test Math Exam",
        "Putnam Competition",
        ],
    'physics theorem': [
        'International Physics Olympiad (IPhO)',
        'Physics Bowl',
        'American Invitational Physics Exam (AIPMT)',
        'International A-Level Physics Exam',
        "Scholastic Assessment Test (SAT) Physics Subject Test",
        "China's GaoKao Physics Problems",
        ],
    'finance formula': [
        'CFA (Chartered Financial Analyst) Exam', 
        'MBA Finance Entrance Exams',
        'Graduate Management Admission Test',
        'FRM (Financial Risk Manager) Exam'
        ],
}

domain_question_mapping = {
    'algorithm': 'coding',
    'data structure': 'coding',
    'math theorem': 'math',
    'physics theorem': 'physics',
    'finance formula': 'finance',
}

# which value algorithm uses the key algorithm
similar_question_mapping = {
    'Two Pointers': [
        "Trapping Rain Water", 
        "Palindrome Partitioning", 
        "Substring Search Algorithm",
        "Merge Sort", "Quick Sort",
        "Longest Increasing Subsequence (LIS)",
    ],
    'Topological Sorting': [
        "Kahn's Algorithm", 
        "Depth First Search (DFS)", 
        "Breadth First Search (BFS)"],
    "Greedy Algorithm": [
        "Kruskal's Algorithm", 
        "Prim's Algorithm", 
        "Huffman Coding"],
    "Knapsack Algorithm (0/1 Knapsack)": ["Knapsack DP with Bitmasking"],
    "Substring Search Algorithm": [
        "Z Algorithm", 
        "Knuth-Morris-Pratt (KMP) Algorithm", 
        "Rabin-Karp Algorithm", 
        "Boyer-Moore Algorithm"],
    "Binary Search":[
        "Longest Increasing Subsequence (LIS)",
        "Substring Search Algorithm"],
    "Breadth First Search (BFS)":[
        "Kahn's Algorithm",
        "Ford-Fulkerson Algorithm"],
    "Depth First Search (DFS)":[
        "N-Queens Problem",
        "Kosaraju's Algorithm",
        "Tarjan's Algorithm",
        "Ford-Fulkerson Algorithm",
        "Palindrome Partitioning",
        "Sudoku Solver",
        "Hamiltonian Path",
        "Combinations","Permutations"],
    "Sweep Line Algorithm":[
        "Merge Sort",
        "Quick Sort"],
    "A-star search algorithm":["Dijkstra's Algorithm","Manhattan Distance"],
    "Prefix Sum":["Trapping Rain Water"],
    "Kruskal's Algorithm":["Merge Sort"],
    ###
    "Stack (Last In, First Out)":["Circular Array", "Linked List","Monotonic Stack"],
    "Monotonic Stack":["Circular Array", "Linked List"],
    "Priority Queue": ["Fibonacci Heap", "Binary Tree"],
    "Linked List":["Skip List","Deque (Double-Ended Queue)","Adjacency List"],
    "Interval Tree":["Red-Black Tree"],
    "Hash Map":["Radix Tree","Trie","Adjacency List","Suffix Tree","Bloom Filter"],
}

all = list_algorithm + list_math_theorem + list_data_structure + list_physics_theorem + list_finance_formula

assert len(all) == len(list(set(all)))

# Verify all keys and values in similar_question_mapping are in the combined list
for key in similar_question_mapping:
    assert key in all, f"Key '{key}' not found in combined list"
    for value in similar_question_mapping[key]:
        assert value in all, f"Value '{value}' not found in combined list"